

<!-- 判斷帳號是否存在 用於找回密碼 不需要html頁面 -->


<!-- 
現階段的開發者因安全性考量無法得知使用者的密碼 已不再於資料庫使用明碼儲存密碼 而是暗碼,編碼(85%),加密(網路封包傳輸,區塊鏈)
所以重設密碼的部分 已更改為發出一個資訊 讓使用者自行重新設定

編碼與加密的差異
*加密<===>解密 (馬賽克) 混淆資訊 mack->amaaacak 可被解開 如例子中在原文每個字前面加上a 使用密鑰.演算法等方式產生不同加密效果
*之所以不太把密碼使用加密技術,是因為可以被聯立方程式破解原文 只要獲得夠多的加密樣本 就可以從中找出規律 將內容還原


*編碼<=/=>解碼 (編碼不可解碼) 將mack放進多個容器中的其中一個,放哪一個容器 是依照不同的演算邏輯產生不同的結果 呈現給外界看時 只會看到容器(一串經計算後產生代碼) 
                             不會看到mack本體且僅能呈現外部的代碼, 無法將容器破壞或倒出獲得內容mack,只要能還原 就是被歸類為加密 而不是編碼

*編碼無法還原的原因 : 假設經過演算後mack產生了一個容器 該容器有128個字元 但僅會保留前面幾個字元 作為編碼(裝內容的容器),
                        然後去除後面剩下多的字元,因已不是原本的字元,而是經過刪減的破碎字元所以無法有足夠的資訊去還原 推算 原本的內容是什麼
                        且無論輸入的資訊多大,終究產生後經刪減的編碼長度,和一個字元內容的編碼長度是相同的, 更不可能被還原

*可以被用作為存在資料表的密碼的原因 : 只要使用的是同一套演算法 再次把相同的內容 如mack 放入時 會產生一樣的結果, 雖然意味著人無法復原解析其內容
                                    但是該演算法是有條理的分類出代號, 相同的使用者密碼會產生相同的編碼, 所以可以用該編碼在資料庫儲存密碼
                                    當使用者登入時輸入的密碼 經過演算法 產生的編碼 比對 資料庫儲存的編碼 使其登入
                                    這個登入動作不會 使用密碼本體比對資料, 而是使用密碼產生的編碼 去與資料表的編碼比對
                                    user:mack=>演算=>(mack=編碼ABC)=(資料表內容 編碼ABC)=>登入成功

*主要為 : 加密一定可以解密 , 編碼的東西不能被還原

*所以目前許多網站使用一串亂碼作為臨時密碼 讓使用者登入後 去改密碼 
  是因為編碼無法被還原 資料表內存的也都是編碼 所以無法回覆使用者 密碼是什麼
  通常就會寄出一份臨時密碼 使用者登入後 到網站輸入新的密碼 產生新的編碼 將新的編碼更新到資料表的密碼欄位上



*加密需要加密與還原的公式,而編碼只需產生編碼,所以使用編碼的速度會高效
編碼使用md5()函式, 用於註冊帳號

1.老舊的做法 找回密碼
使用者提供資訊 系統藉由資訊 從資料表找到相關的項目回傳給使用者
以往使用密碼提示的話  就不會提供密碼  可能是系統向使用者要求帳號 填完發出後 系統提供資料庫內的密碼提示給使用者 使用者自己想辦法

2.重設密碼 現階段大多改成使用email擔任找回密碼的工作 而信箱/帳號都是唯一性 當註冊時系統會搜尋 資料庫內有無重複的email 
避免使用信箱重設密碼時 在撈資料庫的信箱資料 因為重複的信箱資訊 產生錯誤的狀況 
-->

<?php
include "connect.php";
// 使用POST的方式傳送過來  所以用POST的方式接收
$acc=$_POST['acc']; // 這裡的$acc+$pw是使用者傳過來的表單內容

$sql="SELECT * FROM `users` WHERE `acc`='$acc'"; // 搜尋帳號 , 理應帳號必須具有唯一性

$user=$pdo->query($sql)->fetch(); // 只有一筆資料這裡使用fetch

// 這裡勿用isset作為判斷, 若用isset時 變數空值=null=true ,此時$user=null代表該$user變數存在 值是空值, 而isset判斷的是該變數是否存在 而不是值 
// 而是使用empty去判斷$user的內容,和isset不同的是empty看的是值是否為空值,即 0,null,[],"" 若是空值則true
// 檢查$user有無值 (表單提供的該筆帳號內容 對應於資料表)  ,若無 顯示空陣列, 若有 顯示資料陣列 
if(empty($user)){
    echo "查無此帳號";
}else{
    echo "你當初提供的密碼提示為 : ".$user['passnote'];// 不是空 回應密碼
}
?>
<br>
<a href="index.php">回首頁</a>
<a href="1_1login.php">重新登入</a>

